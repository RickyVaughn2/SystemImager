#  #!/bin/bash
#  # module-setup.sh for systemimager
#  
#  check() {
#      [[ $hostonly ]] && return 1
#      return 255 # this module is optional
#  }
#  
#  depends() {
#      echo network syslog
#      case "$(uname -m)" in
#          s390*) echo cms ;;
#      esac
#      return 0
#  }
#  
#  install() {
#      # Copy systemimager template
#      (cd /usr/share/systemimager/boot/${arch}/standard/initrd_template/; tar cpf - .)|(cd $initdir; tar xpf -)
#      # binaries we want in initramfs
#      dracut_install mke2fs mkfs.ext2 mkfs.ext3 mkfs.ext4 mklost+found resize2fs tune2fs e2fsck mkfs.xfs
#      dracut_install dosfsck dosfslabel fatlabel mkdosfs
#      #dracut_install fsck.hfs hattrib hcd hcopy hdel hdir hformat hfs hfsck hls hmkdir hmount hpwd hrename hrmdir humount hvol
#      dracut_install btrfs btrfsck btrfstune fsck.btrfs mkfs.btrfs
#      dracut_install cut date echo env sort test false true [ expr head install tail tee tr uniq wc
#      dracut_install bc gzip bzip2 rsync parted loadkeys blockdev awk clear reset ncat stty tty killall kexec ipcalc
#      dracut_install systemd-cat
#      dracut_install depmod blkid
#      dracut_install find strace
#      dracut_install chmod chown cp dd df dmesg echo egrep fdisk fgrep grep halt hostname ifconfig init insmod kill ln ls lsmod mkdir mknod mkswap modprobe more mv ping poweroff ps reboot rm rmdir rmmod route sed sh sleep swapoff swapon sync tar touch uname vi
#      dracut_install -o syslogd
#  
#      #inst_binary /usr/libexec/anaconda/dd_extract /bin/dd_extract
#  
#      return 0
#  }
